(defun save-lisp-tree-shake-and-die (file toplevel-fn)
  "A dumb tree shaker for SBCL written with lots of advice from nyef."
  (let (packages)
    (maphash (lambda (package-name package)
	       (setf (sb-impl::package-%use-list package) nil)
	       (setf (sb-impl::package-%used-by-list package) nil)
	       (setf (sb-impl::package-%shadowing-symbols package) nil)
	       (setf (sb-impl::package-internal-symbols package)
		     (sb-impl::make-package-hashtable 0))
	       (setf (sb-impl::package-external-symbols package)
		     (sb-impl::make-package-hashtable 0))
	       (setf (sb-impl::package-tables package) #())
	       (setf (sb-impl::package-%implementation-packages package) nil)
	       (setf (sb-impl::package-%local-nicknames package) nil)
	       (setf (sb-impl::package-%locally-nicknamed-by package) nil)
	       (push package-name packages)
	       (do-symbols (symbol package-name)
		 (unless (keywordp symbol)
		   (sb-impl::%set-symbol-package symbol nil)
		   (unintern symbol)
		   )))
	     sb-impl::*package-names*)
    
    (dolist (package packages)
      (unless (string= "KEYWORD" package)
	(remhash package sb-impl::*package-names*))))
  (gc :full t)
  (save-lisp-and-die file :executable t :toplevel toplevel-fn))

(defun main () (print "hello world"))
(save-lisp-tree-shake-and-die "x" #'main)
